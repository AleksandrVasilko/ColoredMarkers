Выбор правильных цветов для вашей веб-страницы может значительно улучшить эстетический привлекательность для ваших читателей.

В этом курсе вы создадите набор цветных маркеров. Вы узнаете различные способы определения значений цветов и как сочетать цвета друг с другом.



Шаг 1
Как вы видели в предыдущих проектах, веб-страницы должны начинаться с DOCTYPE html декларации, за которой следует html элемент.

Добавить DOCTYPE html декларация в верхней части документа, и html элемент после этого. Дать HTML-элементу атрибут lang с en в качестве его значения.



Шаг 2
Вложить элемент head в элемент html. Сразу после элемента head добавить элемент body.



Шаг З
Помните, что элемент title даёт поисковым системам дополнительную информацию о странице. Он также отображает содержимое этого элемента заголовка двумя другими способами:

- в заголовке, когда страница открыта
- в вкладке браузера для страницы, когда вы перемещаете на нее. Даже если эта вкладка не активна, как только вы перемещаете её, отображается текст заголовка.

В элементе head вложить элемент title с текстом Colored Markers.



Шаг 4
Атрибут charset определяет кодировку символов, используемую документом. utf-8 (Unicode Transformation Format - 8-bit) - стандарт кодирования символов, используемый для электронной связи.

Внутри элемента head, вложить мета-элемент с атрибутом charset на "utf-8".



Шаг 5
Вы можете иметь несколько метаэлементов на веб-странице. Каждый метаэлемент добавляет информацию о странице, которая не может быть выражена другими элементами HTML.

Добавить другой meta-элемент в head. Дайте ему атрибут name, установленный на "viewport", а content - на "width=device-width, initial-scale=1.0", чтобы ваша страница выглядела одинаково на всех устройствах.



Шаг 6
Теперь вы готовы начать добавление контента на страницу.

Внутри тела вложить элемент h1 в текст CSS Color Markers.



Шаг 7
В этом проекте вы будете работать с внешним файлом CSS для стилизования страницы. Мы уже создали для вас файл styles.css. Но перед тем, как вы сможете использовать его, вам нужно будет связать его с страницей.

Вложить элемент link в элемент head. Дать ему атрибут rel, установленный на "stylesheet" и атрибут href, установленный на "styles.css".



Шаг 8
Теперь, когда ваш внешний CSS файл настроен, вы можете начать оформление страницы.

Как напоминание, вот как ориентировать элемент абзаца и выравнивать его вправо:

Пример кода

p {
  text-align: right;
}

Создать новое правило CSS, которое нацелено на элемент h1, и установить его свойство text-align в center.



Шаг 9
Теперь вы добавляете некоторые элементы, которые в конечном итоге вы будете стилизовать в цветные маркеры.

Во-первых, внутри элемента body, добавьте элемент div и установите его атрибут class в container. Убедитесь, что элемент div находится ниже элемента h1.



Шаг 10
Далее, в div-элементе, добавьте еще один div-элемент и дайте ему класс marker.



Шаг 11
Настало время добавить цвет маркеру. Помните, что один из способов добавления цвета элементу - использовать ключевое слово цвета, например, black, cyan, или yellow.

Как напоминание, вот как настраивать целевой код для класса freecodecamp:

Пример кода

.freecodecamp {
  
}

Создать новое правило CSS, которое нацелено на класс marker и установить его свойство background-color на red.

Примечание: Вы не увидите никаких изменений после добавления CSS.



Шаг 12
Цвет фона был применен, но так как маркер div не имеет никакого содержания в нем, он по умолчанию не имеет никакой высоты.

В правиле . marker CSS, установите свойство height на 25px и свойства width на 200px



Шаг 13
Ваш маркер будет выглядеть лучше, если он будет сфокусирован на странице. Простой способ сделать это - с помощью свойства Margin Shorthand.

В последнем проекте вы устанавливаете область элементов отдельно с такими свойствами, как margin-top и margin-left. Свойство margin shorthand позволяет легко устанавливать сразу несколько областей.

Для того, чтобы сфокусировать маркер на странице, установите его свойство margin на auto. Это позволяет установить значение margin-top, margin-right, margin-bottom и margin-left на auto.



Шаг 14
Теперь, когда у вас есть один маркер с цветом в центре, пришло время добавить другие маркеры.

В container div добавьте еще два div-элемента и дайте каждому из них класс marker.



Шаг 15
Хотя у вас есть три отдельных маркера div элементов, они выглядят как один большой прямоугольник. Вы должны добавить некоторое пространство между ними, чтобы было легче увидеть каждый элемент.

Если свойство margin shorthand имеет два значения, то оно устанавливает margin-top и margin-bottom для первого значения, а margin-left и margin-right для второго значения.

В правиле . marker CSS, установите свойство margin на 10px auto.



Шаг 16
Чтобы дать маркерам различные цвета, вам нужно будет добавить уникальный класс для каждого. Несколько классов могут быть добавлены к элементу, перечисляя их в атрибуте class и разделяя их пробелами. Например, следующее добавляет классы животных и собак в элемент div.

Пример кода

<div class="animal dog">

Если вы добавляете несколько классов в HTML элемент, стили первых перечисленных вами классов могут быть отменены последующими классами.

Для начала добавьте класс one к первому маркерному элементу div.



Шаг 17
Далее, удалите свойство background-color и его значение из правила CSS marker.



Шаг 18
Затем создайте новое правило CSS, которое ориентируется на класс one и установите его свойство background-color на красный.



Шаг 19
Добавьте класс two вo второй маркер div, а класс three  - в третий маркер div.



Шаг 20
Создать правило CSS, которое ориентируется на класс two и установить его свойство background-color на green.

Также, создайте отдельное правило CSS, которое ориентируется на класс three и задаёт его фон-цвет blue.



Шаг 21
Существует две основные модели цвета: аддитивная модель RGB (красный, зеленый, синий), используемая в электронных устройствах, и субтрактивная модель CMYK (cyan, magenta, yellow, black), используемая в печати.

В этом проекте вы будете работать с моделью RGB. Это означает, что цвета начинаются как чёрные и изменяются по мере введения различных уровней красного, зелёного и синего. Простой способ увидеть это - с помощью функции CSS rgb.

Создайте новое правило CSS, которое ориентирует контейнер класса и установите его фон-цвет на чёрный с rgb(0, 0, 0).



Шаг 22
Функция - это кусок кода, который может принимать ввод и выполнять определенное действие. Функция CSS rgb принимает значения или аргументы для красного, зеленого и синего цвета и производит цвет:

Пример кода

rgb(red, green, blue);

Каждый красный, зеленый и синий значения - это число от 0 до 255. 0 означает, что есть 0% этого цвета, и оно черное. 255 означает, что есть 100% этого цвета.

В правиле .one CSS, заменить красное ключевое слово red с функцией rgb. Для функции rgb установите значение для красного значения 255, значение для зелёного - 0 и значение для голубого - 0.



Шаг 23
Обратите внимание, что цвет фона для маркера все еще красный. Это потому, что вы установили красное значение функции rgb до максимума 255, или 100% красный, и установили оба значения зеленый и синий 0.

Теперь используйте функцию rgb, чтобы установить другие цвета.

В правиле .two CSS, используйте функцию rgb, чтобы установить цвет фона на максимальное значение для зеленого, и 0 для других значений. И в .three правила CSS, используйте функцию rgb, чтобы установить цвет фона на максимальное значение для синего, и 0 для других значений.



Шаг 24
Хотя красный и синий маркеры выглядят одинаково, зеленый гораздо легче, чем был раньше. Это потому, что ключевое слово зелёного цвета на самом деле является темнее и находится примерно в середине между черным и максимальным значением для зеленого.

В правиле .two CSS, установите зелёное значение в функции rgb на 127 для снижения её интенсивности.



Шаг 25
Теперь добавьте немного больше вертикального пространства между маркерами и краем элемента container, в котором они находятся.

В .container CSS правило, используйте свойство shorthand padding для добавления 10px верхнего и нижнего наполнения, а также установите левое и правое наполнение на 0. Это работает аналогично свойству shorthand margin, используемому ранее.



Шаг 26
В модели RGB-цвета первичные цвета являются цветами, которые при их сочетании создают чистый белый. Но для этого, каждый цвет должен быть на его самой высокой интенсивности.

Перед комбинированием цветов, установите зелёный маркер на чистый зеленый. Для функции rgb в .two правила CSS, зеленый назад к максимальному значению 255.



Шаг 27
Теперь, когда у вас есть основные цвета RGB, пришло время их комбинировать.

Для функции rgb в правиле .container, установите значения красного, зеленого и синего на максимум 255.



Шаг 28
Вторичные цвета - это цвета, получаемые при комбинировании первичных цветов. Вы могли заметить некоторые вторичные цвета в последнем шаге, когда вы изменили красные, зеленые и синие значения.

Для создания первого вторичного цвета, желтого, обновите функцию rgb в .one CSS правила, чтобы объединить чистый красный и чистый зеленый.